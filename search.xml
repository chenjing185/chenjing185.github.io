<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>响应式网页设计-基础CSS</title>
      <link href="/2022/04/03/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1-%E5%9F%BA%E7%A1%80CSS/"/>
      <url>/2022/04/03/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1-%E5%9F%BA%E7%A1%80CSS/</url>
      
        <content type="html"><![CDATA[<p>CSS（级联样式表）告诉浏览器如何显示你在 HTML 中写入的文本和其他内容。你可以使用 CSS 控制 HTML 元素的颜色、字体、大小、间距等许多属性。</p><span id="more"></span><h2 id="修改文本的颜色。"><a href="#修改文本的颜色。" class="headerlink" title="修改文本的颜色。"></a>修改文本的颜色。</h2><p>我们通过修改 h2 元素的 style 属性来改变文本颜色。<br>我们需要修改 color 属性值。<br>以下是将 h2 元素设置为蓝色的方法：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>CatPhotoApp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></code></pre><p>请注意,需要在内联 style 声明末尾加上;</p><h2 id="使用元素选择器来设置元素的样式"><a href="#使用元素选择器来设置元素的样式" class="headerlink" title="使用元素选择器来设置元素的样式"></a>使用元素选择器来设置元素的样式</h2><p>在 CSS 中，页面样式的属性有几百个，你可以用来改变元素在页面上的外观。</p><p>当你输入 <code>&lt;h2 style=&quot;color: red;&quot;&gt;CatPhotoApp&lt;/h2&gt;</code>，就可以用行内 CSS 设置 h2 元素的样式。</p><p>这是指定元素样式的一种方法，但有一个更好的方法来应用 CSS。</p><p>在代码的顶部，创建一个 style 声明区域，如下方所示：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><p>在样式声明区域内，可以为所有 h2 元素创建一个 CSS selector。 如果想让所有 h2 元素在变成红色，可以添加下方的样式规则：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">h2</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><p>请注意，每个元素的样式规则都应该有开始和结束大括号{和}。 还需要确保元素的样式定义在开始和结束样式标签之间。 你需要确保所有样式规则位于花括号之间，并且每条样式规则都以分号结束。</p><h2 id="使用-class-选择器设置元素的样式"><a href="#使用-class-选择器设置元素的样式" class="headerlink" title="使用 class 选择器设置元素的样式"></a>使用 class 选择器设置元素的样式</h2><p>CSS 的 class 具有可重用性，可应用于各种 HTML 元素。<br>一个 CSS class 声明示例如下所示：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.blue-text</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><p>可以看到，我们在<code>&lt;style&gt;</code>样式声明区域里，创建了一个名为blue-text的class选择器。 你可以这样将 class 应用于 HTML 元素：<code>&lt;h2 class=&quot;blue-text&quot;&gt;CatPhotoApp&lt;/h2&gt;</code>。 注意在CSS style元素里，class 名以一个句点开头。 在HTML元素的class属性中，class 名的开头没有句点。</p><h2 id="更改元素的字体大小"><a href="#更改元素的字体大小" class="headerlink" title="更改元素的字体大小"></a>更改元素的字体大小</h2><p>字体大小由 font-size 属性控制，如下所示：</p><pre class="language-html" data-language="html"><code class="language-html">h1 &#123;  font-size: 30px;&#125;</code></pre><h2 id="元素的字体族名"><a href="#元素的字体族名" class="headerlink" title="元素的字体族名"></a>元素的字体族名</h2><h3 id="设置元素的字体族名"><a href="#设置元素的字体族名" class="headerlink" title="设置元素的字体族名"></a>设置元素的字体族名</h3><p>通过 font-family 属性，我们可以设置元素里的字体族名。<br>如果你想将 h2 元素的字体设置为 sans-serif，可以这样写：</p><pre class="language-html" data-language="html"><code class="language-html">h2 &#123;  font-family: sans-serif;&#125;</code></pre><h3 id="引入谷歌字体"><a href="#引入谷歌字体" class="headerlink" title="引入谷歌字体"></a>引入谷歌字体</h3><p>在我们的网站上，除了使用系统提供的默认字体以外，我们也可以使用自定义字体。 网络上有很多字体库。 在这个例子中，我们将使用 Google 字体库。<br>Google 字体库是一个免费的 Web 字体库，我们只需要在 CSS 里设置字体的 URL 即可使用。<br>要引入 Google Font，你需要从 Google Fonts 上复制字体的 URL，并粘贴到你的 HTML 里面。 在这个挑战中，我们需要引入 Lobster 字体。 因此，请复制以下代码段，并粘贴到代码编辑器顶部，即放到 style 标签之前。</p><link href="https://fonts.googleapis.com/css?family=Lobster" rel="stylesheet" type="text/css">现在可以在 CSS 中使用 Lobster 字体，并像下面一样使用 Lobster 作为 FAMILY_NAME：<pre class="language-none"><code class="language-none">font-family: FAMILY_NAME, GENERIC_NAME;</code></pre>GENERIC_NAME 是可选的，它用来指明在其他字体不可用时的后备字体。字体名区分大小写，并且如果字体名含有空格，则在声明时需要用引号包起来。 例如，使用 "Open Sans" 字体需要添加引号，而 Lobster 则不需要。<h3 id="字体如何优雅降级"><a href="#字体如何优雅降级" class="headerlink" title="字体如何优雅降级"></a>字体如何优雅降级</h3><p>所有浏览器都有几种默认字体， 包括monospace、serif 和sans-serif。<br>在字体不可用的时候，你可以告诉浏览器通过“降级”去使用其他字体。<br>如果你想将一个元素的字体设置成 Helvetica，但当 Helvetica 不可用时，降级使用 sans-serif 字体，那么可以这样写：</p><pre class="language-html" data-language="html"><code class="language-html">p &#123;  font-family: Helvetica, sans-serif;&#125;</code></pre><p>通用字体名不区分大小写。 同时，也不需要使用引号，因为它们是 CSS 中的关键字。</p><h2 id="调整图片的大小"><a href="#调整图片的大小" class="headerlink" title="调整图片的大小"></a>调整图片的大小</h2><p>CSS 的 width 属性可以控制元素的宽度。 和设置文本字号一样，我们会以 px（像素）为单位来设置图片的宽度。<br>例如，如果你想创建一个叫 larger-image 的 CSS class，来控制 HTML 元素的宽度为 500px，就可以这样写：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.larger-image</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h2 id="元素添加边框"><a href="#元素添加边框" class="headerlink" title="元素添加边框"></a>元素添加边框</h2><h3 id="在元素周围添加边框"><a href="#在元素周围添加边框" class="headerlink" title="在元素周围添加边框"></a>在元素周围添加边框</h3><p>CSS 边框具有 style、color、width 属性。<br>假如我们要将一个 HTML 元素边框设置为 5px 的红色实线边框，我们可以这样做：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.thin-red-border</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h3 id="用-border-radius-添加圆角边框"><a href="#用-border-radius-添加圆角边框" class="headerlink" title="用 border-radius 添加圆角边框"></a>用 border-radius 添加圆角边框</h3><p>边框的四个角看起来很尖锐， 我们可以使用border-radius属性来让它变得圆润。</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.thick-green-border</span> <span class="token punctuation">&#123;</span><span class="token property">border-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span><span class="token property">border-width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 响应式网页设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>响应式网页设计-基础HTML和HTML5</title>
      <link href="/2022/04/01/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1-%E5%9F%BA%E7%A1%80HTML%E5%92%8CHTML5/"/>
      <url>/2022/04/01/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1-%E5%9F%BA%E7%A1%80HTML%E5%92%8CHTML5/</url>
      
        <content type="html"><![CDATA[<p>HTML 是一种标记语言，使用特殊的语法或标记来向浏览器描述网页的结构。HTML 元素由开始和结束标签构成，标签之间是文本内容。 不同的标签可以让文本内容以标题、段落、列表等形式展现。</p><span id="more"></span><p>大部分 HTML 元素都有一个开始标签和一个结束标签。<br>开始标签像这样：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></code></pre><p>结束标签像这样：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></code></pre><p>开始标签和结束标签的唯一区别就是结束标签多了一个斜杠。</p><h2 id="标题标签-h1-h6"><a href="#标题标签-h1-h6" class="headerlink" title="标题标签: h1~h6"></a>标题标签: h1~h6</h2><p>这些元素用来告诉浏览器网站的结构是什么样子。 h1 元素通常被用作主标题，h2 元素通常被用作副标题， 还有 h3、h4、h5、h6 元素，它们分别用作不同级别的标题。</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span></code></pre><h2 id="段落标签-p"><a href="#段落标签-p" class="headerlink" title="段落标签: p"></a>段落标签: p</h2><p>p 元素是网站上段落文本的首选元素。 p 是“paragraph（段落）”的缩写。</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><h2 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签:"></a>注释标签:</h2><pre class="language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--注释文本--></span></code></pre><h2 id="图片标签-img"><a href="#图片标签-img" class="headerlink" title="图片标签: img"></a>图片标签: img</h2><p>你可以使用 img 元素来为你的网站添加图片，其中 src 属性指向图片的地址。<br>例如：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.freecatphotoapp.com/your-image.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>注意：img 元素是没有结束标签的。所有的 img 元素 必须 有 alt 属性。 alt 的属性值有两个作用，第一个作用是让屏幕阅读器可以知晓图片的内容，这会对网页的可访问性有很大提升；另一个作用是当图片无法加载时，页面需要显示的替代文本。<br>注意： 如果图片是纯装饰性的，把 alt 的属性值设置为空是最佳实践。理想情况下，alt 属性不应该包含特殊字符，除非有特殊需要。</p><h2 id="超链接标签-a"><a href="#超链接标签-a" class="headerlink" title="超链接标签: a"></a>超链接标签: a</h2><h3 id="网页间的跳转"><a href="#网页间的跳转" class="headerlink" title="网页间的跳转"></a>网页间的跳转</h3><p>你可以用 a（Anchor，简写为 a）来实现网页间的跳转。</p><p>a 需要一个 href 属性指向跳转的目的地。 同时，它还应有内容。 例如：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.freecodecamp.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>this links to freecodecamp.org<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>浏览器将显示文本 this links to freecodecamp.org，这是一个可点击的链接。 你可以通过这个链接访问 <a href="https://www.freecodecamp.org./">https://www.freecodecamp.org。</a></p><h3 id="网页内部的跳转"><a href="#网页内部的跳转" class="headerlink" title="网页内部的跳转"></a>网页内部的跳转</h3><p>a（anchor）元素也可以用于创建内部链接，跳转到网页内的各个不同部分。<br>要创建内部链接，你需要将链接的 href 属性值设置为一个哈希符号 # 加上你想内部链接到的元素的 id，通常是在网页下方的元素。 然后你需要将相同的 id 属性添加到你链接到的元素中。 id 是描述网页元素的一个属性，它的值在整个页面中唯一。<br>例如当用户点击了 Contacts 链接，页面就会跳转到网页的 Contacts 区域。</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#contacts-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Contacts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>contacts-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Contacts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></code></pre><p>当用户点击 Contacts 链接时，他们将被带到带有 Contacts 标题元素的网页部分。</p><h3 id="将a标签嵌套在段落中"><a href="#将a标签嵌套在段落中" class="headerlink" title="将a标签嵌套在段落中"></a>将a标签嵌套在段落中</h3><p>你可以在其他文本元素内嵌套链接。</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>  Here's a <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.freecodecamp.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> link to www.freecodecamp.org<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> for you to follow.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>让我们来拆解一下这个例子。 通常，文本是被包裹在 p 元素内：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span> Here's a ... for you to follow. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>接下来是锚点元素 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>（它需要结束标签 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>）：```html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>target 是锚点元素的一个属性，它用来指定链接的打开方式。 属性值 _blank 表示链接会在新标签页打开。 href 是锚点元素的另一个属性，它用来指定链接的 URL：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.freecodecamp.org<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>a 元素内的文本 link to <a href="http://www.freecodecamp.org/">www.freecodecamp.org</a> 叫作锚文本，会显示为一个可以点击的链接：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> ... <span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>link to freecodecamp.org<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>此示例的最终输出结果是这样：<br>Here’s a link to <a href="http://www.freecodecamp.org/">www.freecodecamp.org</a> for you to follow.</p><h3 id="链接占位符"><a href="#链接占位符" class="headerlink" title="链接占位符#"></a>链接占位符#</h3><p>有时你想为网站添加一个 a 元素，但还不确定要将它链接到哪里。 可以将 href 属性的值替换为#，以此来创建链接占位符。例如: </p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><h3 id="给图片添加链接"><a href="#给图片添加链接" class="headerlink" title="给图片添加链接"></a>给图片添加链接</h3><p>你可以通过把元素嵌套进 a 里使其变成一个链接。如果我们要把图片嵌套进 a 元素， 可以这样写：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Three kittens running towards the camera.<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>如果把 a 的 href 属性值设置为 #，创建的是一个死链接（不跳转到其他画面）。</p><h2 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>HTML 有一个特定的元素用于创建无序列表。<br>无序列表以ul开始，中间包含一个或多个li元素， 最后以&#x2F;ul结束。<br>例如:</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>milk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>cheese<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><p>会创建一个要点列表，包括 milk 和 cheese。</p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>HTML 中有用于创建有序列表的特定元素。<br>有序列表以ol开始，中间包含一个或多个li元素。 最后以&#x2F;ol结束。<br>例如:</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Garfield<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Sylvester<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre><p>将创建一个包含 Garfield 和 Sylvester 的编号列表。</p><h2 id="输入框标签"><a href="#输入框标签" class="headerlink" title="输入框标签"></a>输入框标签</h2><p>input 输入框可以让你轻松获得用户的输入。你可以像这样创建一个文本输入框：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>注意 input 输入框是没有结束标签的。</p><h2 id="给输入框添加占位符文本"><a href="#给输入框添加占位符文本" class="headerlink" title="给输入框添加占位符文本"></a>给输入框添加占位符文本</h2><p>占位符文本是用户在 input 输入框中输入任何东西前的预定义文本。你可以像这样创建一个占位符：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>this is placeholder text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>注意： 别忘了 input 元素是 “自闭和标签”，即不需要结束标签。</p><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><h3 id="创建表单"><a href="#创建表单" class="headerlink" title="创建表单"></a>创建表单</h3><p>我们可以只通过 HTML 来实现发送数据给服务器的表单， 只需要给 form 元素添加 action 属性即可。例如：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url-where-you-want-to-submit-form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><h3 id="给表单添加提交按钮"><a href="#给表单添加提交按钮" class="headerlink" title="给表单添加提交按钮"></a>给表单添加提交按钮</h3><p>给表单添加一个 submit（提交）按钮。 点击提交按钮时，表单中的数据将会被发送到 action 属性指定的 URL 上。例如：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>this button submits the form<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre><h3 id="给表单添加一个必填字段"><a href="#给表单添加一个必填字段" class="headerlink" title="给表单添加一个必填字段"></a>给表单添加一个必填字段</h3><p>当你设计表单时，你可以指定某些字段为必填项（required），只有当用户填写了该字段后，才可以提交表单。<br>如果你想把文本输入框设置为必填项，在 input 元素中加上 required 属性就可以了，例如：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span></code></pre><h2 id="单选框和复选框"><a href="#单选框和复选框" class="headerlink" title="单选框和复选框"></a>单选框和复选框</h2><h3 id="创建一组单选按钮"><a href="#创建一组单选按钮" class="headerlink" title="创建一组单选按钮"></a>创建一组单选按钮</h3><p>单选按钮是 input 选择框的一种类型。<br>每一个单选按钮都应该嵌套在它自己的 label（标签）元素中。 这样，我们相当于给 input 元素和包裹它的 label 元素建立起了对应关系。<br>所有关联的单选按钮应该拥有相同的 name 属性。 创建一组单选按钮，选中其中一个按钮，其他按钮即显示为未选中，以确保用户只提供一个答案。<br>下面是一个单选按钮的例子：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor-outdoor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Indoor <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code></pre><p>最佳实践是在 label 元素上设置 for 属性，让其值与相关联的 input 单选按钮的 id 属性值相同。 这使得辅助技术能够在标签和相关的 input 元素之间建立关联关系。 例如：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor-outdoor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Indoor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code></pre><p>我们也可以在 label 标签中嵌入 input 元素：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor-outdoor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Indoor <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code></pre><h3 id="创建一组复选框"><a href="#创建一组复选框" class="headerlink" title="创建一组复选框"></a>创建一组复选框</h3><p>复选框是 input 选择框的一种类型。<br>每一个复选框都应该嵌套在它自己的 label（标签）元素中。这样我们相当于给 input 元素和包裹它的 label 元素建立起了对应关系。所有关联的复选框应该拥有相同的 name 属性。<br>使得 input 与 label 关联的最佳实践是在 label 元素上设置 for 属性，让其值与相关联的 input 复选框的 id 属性值相同。<br>下面是一个复选框的例子：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loving<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loving<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>personality<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> Loving<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code></pre><h3 id="使用单选框和复选框的value属性"><a href="#使用单选框和复选框的value属性" class="headerlink" title="使用单选框和复选框的value属性"></a>使用单选框和复选框的value属性</h3><p>提交表单时，所选项的值会发送给服务端。 radio 和 checkbox 的 value 属性值决定了发送到服务端的实际内容。<br>例如：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor-outdoor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Indoor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>outdoor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>outdoor<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>outdoor<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indoor-outdoor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Outdoor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code></pre><p>这里有两个 radio 单选框。 当用户提交表单时，如果 indoor 选项被选中，表单数据会包含：indoor-outdoor&#x3D;indoor。 也就是所选项的 name 和 value 属性值。<br>如果没有指明 value 属性值，则会使用默认值做为表单数据提交，也就是 on。 在这种情况下，如果用户选中 “indoor” 选项然后提交表单，表单数据则会包含 indoor-outdoor&#x3D;on。 这样的表单数据看起来不够直观，因此最好将 value 属性值设置为一些有意义的内容。</p><h3 id="给单选按钮和复选框添加默认选中项"><a href="#给单选按钮和复选框添加默认选中项" class="headerlink" title="给单选按钮和复选框添加默认选中项"></a>给单选按钮和复选框添加默认选中项</h3><p>用 checked 属性把第一个复选框和单选按钮都设置为默认选中。<br>为此，只需将单词 checked 添加到 input 元素的内部。 例如:</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test-name<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span></code></pre><h2 id="元素嵌套"><a href="#元素嵌套" class="headerlink" title="元素嵌套"></a>元素嵌套</h2><p>div 元素也叫内容划分元素，是一个包裹其他元素的通用容器。<br>它也是 HTML 中出现频率最高的元素。<br>和其他普通元素一样，你可以用<div>来标记一个 div 元素的开始，用 </div> 来标记一个 div 元素的结束。</p><h2 id="声明HTML的文档类型"><a href="#声明HTML的文档类型" class="headerlink" title="声明HTML的文档类型"></a>声明HTML的文档类型</h2><p>在文档的顶部，我们需要告诉浏览器网页所使用的 HTML 的版本。 HTML 是一个在不停发展的语言，大部分浏览器都支持 HTML 的最新标准，也就是 HTML5。 大部分主流浏览器都支持最新的 HTML5 规范。 但是一些陈旧的网页可能使用的是老版本的 HTML。<br>你可以通过 <!DOCTYPE ...> 来告诉浏览器页面上使用的 HTML 版本，”…” 部分就是版本号。 <!DOCTYPE html> 对应的就是 HTML5。<br>! 和大写的 DOCTYPE 是很重要的，尤其是对那些老的浏览器。 但 html 无论大写小写都可以。<br>所有的 HTML 代码都必须位于 html 标签中。 其中 <html> 位于 <!DOCTYPE html> 之后，</html> 位于网页的结尾。<br>这是一个网页结构的列子。 你的 HTML 代码会在两个 html 标签之间。</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="定义HTML文档的head和body"><a href="#定义HTML文档的head和body" class="headerlink" title="定义HTML文档的head和body"></a>定义HTML文档的head和body</h2><p>html 的结构主要分为两大部分：head 和 body。 网页的描述应放入 head 标签， 网页的内容（向用户展示的）则应放入 body 标签。<br>比如 link、meta、title 和 style 都应放入 head 标签。<br>这是网页布局的一个例子：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 响应式网页设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello-world</title>
      <link href="/2022/03/21/hello-world/"/>
      <url>/2022/03/21/hello-world/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>在Ubuntu中部署django</title>
      <link href="/2022/03/18/%E5%9C%A8Ubuntu%E4%B8%AD%E9%83%A8%E7%BD%B2django/"/>
      <url>/2022/03/18/%E5%9C%A8Ubuntu%E4%B8%AD%E9%83%A8%E7%BD%B2django/</url>
      
        <content type="html"><![CDATA[<p>这是作者本人在Ubuntu中部署django中遇到的一些问题</p><span id="more"></span><p><strong>在Ubuntu中部署django本人是参考的django中文网的</strong><br><a href="https://www.django.cn/article/show-22.html">Ubuntu部署Django项目方法详解</a></p><p>在部署过程中本人遇到了以下问题,特此记录一下:</p><h2 id="Ubuntu中安装nginx报错"><a href="#Ubuntu中安装nginx报错" class="headerlink" title="Ubuntu中安装nginx报错"></a>Ubuntu中安装nginx报错</h2><h3 id="‘struct-crypt-data’-has-no-member-named-‘current-salt’"><a href="#‘struct-crypt-data’-has-no-member-named-‘current-salt’" class="headerlink" title="‘struct crypt_data’ has no member named ‘current_salt’"></a>‘struct crypt_data’ has no member named ‘current_salt’</h3><p>本人在按照上面的部署教程部署到第八步安装nginx并配置中的sudo make报错</p><p><img src="https://img-blog.csdnimg.cn/2020071712094293.png" loading="lazy"></p><p>问题原因: nginx的版本高或者服务器版本高的问题</p><p>解决方法: 在nginx安装目录下找到src&#x2F;os&#x2F;unix&#x2F;ngx_user.c文件,使用vim打开,将cd.current_salt[0] &#x3D; ~salt[0]:这行注释就行了</p><p><img src="https://img-blog.csdnimg.cn/20200717121206221.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1bWFueXI=,size_16,color_FFFFFF,t_70" loading="lazy"></p><p>在执行完上面的操作后,又出现了新的报错</p><h3 id="make-1-objs-x2F-src-x2F-core-x2F-ngx-murmurhash-o-Error-1"><a href="#make-1-objs-x2F-src-x2F-core-x2F-ngx-murmurhash-o-Error-1" class="headerlink" title="make[1]: *** [objs&#x2F;src&#x2F;core&#x2F;ngx_murmurhash.o] Error 1"></a>make[1]: *** [objs&#x2F;src&#x2F;core&#x2F;ngx_murmurhash.o] Error 1</h3><p>问题原因: Werror它要求GCC将所有的警告当成错误进行处理 所有导致错误输出 并不能进行下一步</p><p>解决方法: 使用vim打开&#x2F;nginx-1.10.3&#x2F;objs&#x2F;Makefile找到 -Werror并去掉在重新make即可</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
